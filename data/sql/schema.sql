CREATE TABLE category (id INT NOT NULL identity, name VARCHAR(150) NOT NULL, description VARCHAR(1000) NULL, PRIMARY KEY([id]));
CREATE TABLE client (id INT NOT NULL identity, first_name VARCHAR(150) NOT NULL, last_name VARCHAR(150) NOT NULL, email_address VARCHAR(150) NOT NULL, address VARCHAR(150) NOT NULL, number VARCHAR(8) NOT NULL, city VARCHAR(150) NOT NULL, commune VARCHAR(150) NOT NULL, username VARCHAR(150) NOT NULL, password VARCHAR(150) NOT NULL, user_id INT NOT NULL, user_type VARCHAR(255) NULL, PRIMARY KEY([id]));
CREATE TABLE comment (id INT NOT NULL identity, name VARCHAR(150) NOT NULL, email VARCHAR(150) NOT NULL, url VARCHAR(150) NOT NULL, comment VARCHAR(1000) NOT NULL, state VARCHAR(255) NULL, user_id INT NOT NULL, post_id INT NOT NULL, created_at CHAR(19) NOT NULL, updated_at CHAR(19) NOT NULL, PRIMARY KEY([id]));
CREATE TABLE pedido (id INT NOT NULL identity, user_id INT NULL, estado VARCHAR(255) NOT NULL, created_at CHAR(19) NOT NULL, updated_at CHAR(19) NOT NULL, PRIMARY KEY([id]));
CREATE TABLE pedido_tb_articulos (id INT NOT NULL identity, tb_articulos_id VARCHAR(15) NULL, pedido_id INT NULL, PRIMARY KEY([id]));
CREATE TABLE post_index (keyword VARCHAR(200) NOT NULL, field VARCHAR(50) NOT NULL, position INT NOT NULL, id INT NOT NULL, PRIMARY KEY([keyword], [field], [position], [id]));
CREATE TABLE post (id INT NOT NULL identity, title VARCHAR(150) NOT NULL, content TEXT NOT NULL, date CHAR(19) NOT NULL, state VARCHAR(255) NULL, user_id INT NULL, created_at CHAR(19) NOT NULL, updated_at CHAR(19) NOT NULL, slug VARCHAR(255) NULL, PRIMARY KEY([id]));
CREATE TABLE post_category (post_id INT NOT NULL, category_id INT NOT NULL, PRIMARY KEY([post_id], [category_id]));
CREATE TABLE post_tag (post_id INT NOT NULL, tag_id INT NOT NULL, PRIMARY KEY([post_id], [tag_id]));
CREATE TABLE tag (id INT NOT NULL identity, name VARCHAR(150) NOT NULL, description VARCHAR(1000) NULL, PRIMARY KEY([id]));
CREATE TABLE tb_ArticuloCategoria (idallgestempresa FLOAT NOT NULL, idempresa FLOAT NOT NULL, idarticulo VARCHAR(15) NOT NULL, idcategoria FLOAT NOT NULL, idaccesorio FLOAT NOT NULL, PRIMARY KEY([idallgestempresa], [idempresa], [idarticulo], [idcategoria], [idaccesorio]));
CREATE TABLE tb_Articulos (idallgestempresa FLOAT DEFAULT 2 NOT NULL, idempresa FLOAT DEFAULT 1 NOT NULL, idarticulo VARCHAR(15) NOT NULL, idcategoria INT NOT NULL, idaccesorio INT NOT NULL, nombreweb VARCHAR(100) NULL, textoweb VARCHAR(500) NULL, modelo VARCHAR(60) NULL, marca VARCHAR(60) NULL, imagen VARCHAR(50) NULL, idgrupoarticulo INT NULL, idsubgrupoarticulo INT NULL, siactivadoweb INT NOT NULL, idestado INT NULL, idestadoventas INT NOT NULL, precioventa FLOAT NULL, PRIMARY KEY([idallgestempresa], [idempresa], [idarticulo]));
CREATE TABLE tb_CatalogoAccesorios (idallgestempresa FLOAT NOT NULL, idempresa FLOAT NOT NULL, idcategoria FLOAT NOT NULL, idaccesorio FLOAT NOT NULL, nombre VARCHAR(50) NULL, siacivadoweb FLOAT NULL, nombreweb VARCHAR(20) NULL, PRIMARY KEY([idallgestempresa], [idempresa], [idcategoria], [idaccesorio]));
CREATE TABLE tb_CatalogoCategoria (idallgestempresa FLOAT NOT NULL, idempresa FLOAT NOT NULL, idcategoria FLOAT NOT NULL, nombre VARCHAR(20) NULL, siacivadoweb FLOAT NULL, PRIMARY KEY([idallgestempresa], [idempresa], [idcategoria]));
CREATE TABLE tb_ClienteEmpresa (idallgestempresa INT NOT NULL, idempresa INT NOT NULL, idcliente VARCHAR(15) NOT NULL, correlativo VARCHAR(45) NULL, giro VARCHAR(60) NULL, fono VARCHAR(50) NULL, celular VARCHAR(20) NULL, fax VARCHAR(20) NULL, email VARCHAR(45) NULL, siclienteweb INT NULL, claveweb VARCHAR(15) NULL, PRIMARY KEY([idallgestempresa], [idempresa], [idcliente]));
CREATE TABLE tb_OfertasPorArticulo (idallgestempresa INT DEFAULT 2 NOT NULL, idempresa INT DEFAULT 1 NOT NULL, idarticulo VARCHAR(15) NOT NULL, correlativooferta INT NOT NULL, bultooferta INT NOT NULL, preciooferta INT NULL, fechaactualizacion CHAR(19) NULL, idusuario VARCHAR(15) NULL, PRIMARY KEY([idallgestempresa], [idempresa], [idarticulo], [correlativooferta], [bultooferta]));
CREATE TABLE visit (id INT NOT NULL identity, ip VARCHAR(150) NOT NULL, date CHAR(10) NULL, post_id INT NOT NULL, PRIMARY KEY([id]));
CREATE TABLE sf_guard_forgot_password (id INT NOT NULL identity, user_id INT NOT NULL, unique_key VARCHAR(255) NULL, expires_at CHAR(19) NOT NULL, created_at CHAR(19) NOT NULL, updated_at CHAR(19) NOT NULL, PRIMARY KEY([id]));
CREATE TABLE sf_guard_group (id INT NOT NULL identity, name VARCHAR(255) NULL UNIQUE, description VARCHAR(1000) NULL, created_at CHAR(19) NOT NULL, updated_at CHAR(19) NOT NULL, PRIMARY KEY([id]));
CREATE TABLE sf_guard_group_permission (group_id INT NOT NULL, permission_id INT NOT NULL, created_at CHAR(19) NOT NULL, updated_at CHAR(19) NOT NULL, PRIMARY KEY([group_id], [permission_id]));
CREATE TABLE sf_guard_permission (id INT NOT NULL identity, name VARCHAR(255) NULL UNIQUE, description VARCHAR(1000) NULL, created_at CHAR(19) NOT NULL, updated_at CHAR(19) NOT NULL, PRIMARY KEY([id]));
CREATE TABLE sf_guard_remember_key (id INT NOT NULL identity, user_id INT NULL, remember_key VARCHAR(32) NULL, ip_address VARCHAR(50) NULL, created_at CHAR(19) NOT NULL, updated_at CHAR(19) NOT NULL, PRIMARY KEY([id]));
CREATE TABLE sf_guard_user (id INT NOT NULL identity, first_name VARCHAR(255) NULL, last_name VARCHAR(255) NULL, email_address VARCHAR(255) NULL, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128) NULL, password VARCHAR(128) NOT NULL, is_active BIT DEFAULT '1' NULL, is_super_admin BIT DEFAULT '0' NULL, last_login CHAR(19) NULL, created_at CHAR(19) NOT NULL, updated_at CHAR(19) NOT NULL, PRIMARY KEY([id]));
CREATE TABLE sf_guard_user_group (user_id INT NOT NULL, group_id INT NOT NULL, created_at CHAR(19) NOT NULL, updated_at CHAR(19) NOT NULL, PRIMARY KEY([user_id], [group_id]));
CREATE TABLE sf_guard_user_permission (user_id INT NOT NULL, permission_id INT NOT NULL, created_at CHAR(19) NOT NULL, updated_at CHAR(19) NOT NULL, PRIMARY KEY([user_id], [permission_id]));
CREATE UNIQUE INDEX [post_sluggable] ON [post] ([slug]);
CREATE INDEX [is_active_idx] ON [sf_guard_user] ([is_active]);
ALTER TABLE [comment] ADD CONSTRAINT [comment_post_id_post_id] FOREIGN KEY ([post_id]) REFERENCES [post]([id]);
ALTER TABLE [pedido_tb_articulos] ADD CONSTRAINT [pedido_tb_articulos_pedido_id_pedido_id] FOREIGN KEY ([pedido_id]) REFERENCES [pedido]([id]);
ALTER TABLE [post_index] ADD CONSTRAINT [post_index_id_post_id] FOREIGN KEY ([id]) REFERENCES [post]([id]) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE [post_category] ADD CONSTRAINT [post_category_post_id_post_id] FOREIGN KEY ([post_id]) REFERENCES [post]([id]);
ALTER TABLE [post_category] ADD CONSTRAINT [post_category_category_id_category_id] FOREIGN KEY ([category_id]) REFERENCES [category]([id]);
ALTER TABLE [post_tag] ADD CONSTRAINT [post_tag_tag_id_tag_id] FOREIGN KEY ([tag_id]) REFERENCES [tag]([id]);
ALTER TABLE [post_tag] ADD CONSTRAINT [post_tag_post_id_post_id] FOREIGN KEY ([post_id]) REFERENCES [post]([id]);
ALTER TABLE [visit] ADD CONSTRAINT [visit_post_id_post_id] FOREIGN KEY ([post_id]) REFERENCES [post]([id]);
ALTER TABLE [sf_guard_forgot_password] ADD CONSTRAINT [sf_guard_forgot_password_user_id_sf_guard_user_id] FOREIGN KEY ([user_id]) REFERENCES [sf_guard_user]([id]) ON DELETE CASCADE;
ALTER TABLE [sf_guard_group_permission] ADD CONSTRAINT [sf_guard_group_permission_permission_id_sf_guard_permission_id] FOREIGN KEY ([permission_id]) REFERENCES [sf_guard_permission]([id]) ON DELETE CASCADE;
ALTER TABLE [sf_guard_group_permission] ADD CONSTRAINT [sf_guard_group_permission_group_id_sf_guard_group_id] FOREIGN KEY ([group_id]) REFERENCES [sf_guard_group]([id]) ON DELETE CASCADE;
ALTER TABLE [sf_guard_remember_key] ADD CONSTRAINT [sf_guard_remember_key_user_id_sf_guard_user_id] FOREIGN KEY ([user_id]) REFERENCES [sf_guard_user]([id]) ON DELETE CASCADE;
ALTER TABLE [sf_guard_user_group] ADD CONSTRAINT [sf_guard_user_group_user_id_sf_guard_user_id] FOREIGN KEY ([user_id]) REFERENCES [sf_guard_user]([id]) ON DELETE CASCADE;
ALTER TABLE [sf_guard_user_group] ADD CONSTRAINT [sf_guard_user_group_group_id_sf_guard_group_id] FOREIGN KEY ([group_id]) REFERENCES [sf_guard_group]([id]) ON DELETE CASCADE;
ALTER TABLE [sf_guard_user_permission] ADD CONSTRAINT [sf_guard_user_permission_user_id_sf_guard_user_id] FOREIGN KEY ([user_id]) REFERENCES [sf_guard_user]([id]) ON DELETE CASCADE;
ALTER TABLE [sf_guard_user_permission] ADD CONSTRAINT [sf_guard_user_permission_permission_id_sf_guard_permission_id] FOREIGN KEY ([permission_id]) REFERENCES [sf_guard_permission]([id]) ON DELETE CASCADE;
