<?php

/**
 * PostTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PostTable extends Doctrine_Table {

    /**
     * Returns an instance of this class.
     *
     * @return object PostTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('Post');
    }

    public function getDraft() {
        return Doctrine::getTable('Post')->findByState('Borrador');
    }

    public function getPublished() {
       return Doctrine::getTable('Post')->findByState("Publicado");
    }

    public function getPending() {
        return Doctrine::getTable('Post')->findByState('Pendiente');
    }
    public function getDraftUser() {
        return Doctrine::getTable('Post')->findByStateAndUserId('Borrador', sfContext::getInstance()->getUser()->getGuardUser()->getId());
    }

    public function getPublishedUser() {
       return Doctrine::getTable('Post')->findByStateAndUserId("Publicado",sfContext::getInstance()->getUser()->getGuardUser()->getId());
    }

    public function getPendingUser() {
        return Doctrine::getTable('Post')->findByStateAndUserId('Pendiente',sfContext::getInstance()->getUser()->getGuardUser()->getId());
    }
    
    public function getAllPost($search=null) {
        if($search)
            return Doctrine_Query::create()->from('Post p')->where('state =?','Publicado')->addWhere('title LIKE ?','%'.$search.'%')->orderBy('id desc');
        else
         return Doctrine_Query::create()->from('Post p')->where('state =?','Publicado')->orderBy('id desc');
            
    }
    public function getPostUltimate() {
            return Doctrine_Query::create()->from('Post p')->where('state =?','Publicado')->orderBy('id desc')->limit(10)->execute();
    }
    public function getPostPerMes() {
            return Doctrine_Query::create()->select('distinct(month(p.date)) as mes,year(p.date) as ano')->from('Post p')->where('p.state =?','Publicado')->fetchArray();
    }
    public function getPostTag($tag='nada') {
        return Doctrine_Query::create()->from('Post p')->innerJoin('p.PostTags pt')->innerJoin('pt.Tag t')->where('p.state =?','Publicado')->addWhere('t.name =?',$tag);
    }
}