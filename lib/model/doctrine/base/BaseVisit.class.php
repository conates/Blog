<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Visit', 'doctrine');

/**
 * BaseVisit
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $ip
 * @property string $date
 * @property integer $post_id
 * @property Post $Post
 * 
 * @method integer getId()      Returns the current record's "id" value
 * @method string  getIp()      Returns the current record's "ip" value
 * @method string  getDate()    Returns the current record's "date" value
 * @method integer getPostId()  Returns the current record's "post_id" value
 * @method Post    getPost()    Returns the current record's "Post" value
 * @method Visit   setId()      Sets the current record's "id" value
 * @method Visit   setIp()      Sets the current record's "ip" value
 * @method Visit   setDate()    Sets the current record's "date" value
 * @method Visit   setPostId()  Sets the current record's "post_id" value
 * @method Visit   setPost()    Sets the current record's "Post" value
 * 
 * @package    Blog
 * @subpackage model
 * @author     Conates
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseVisit extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('visit');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('ip', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('date', 'string', 10, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('post_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Post', array(
             'local' => 'post_id',
             'foreign' => 'id'));
    }
}