<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PostCategory', 'doctrine');

/**
 * BasePostCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $post_id
 * @property integer $category_id
 * @property Category $Category
 * @property Post $Post
 * 
 * @method integer      getPostId()      Returns the current record's "post_id" value
 * @method integer      getCategoryId()  Returns the current record's "category_id" value
 * @method Category     getCategory()    Returns the current record's "Category" value
 * @method Post         getPost()        Returns the current record's "Post" value
 * @method PostCategory setPostId()      Sets the current record's "post_id" value
 * @method PostCategory setCategoryId()  Sets the current record's "category_id" value
 * @method PostCategory setCategory()    Sets the current record's "Category" value
 * @method PostCategory setPost()        Sets the current record's "Post" value
 * 
 * @package    Blog
 * @subpackage model
 * @author     Conates
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePostCategory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('post_category');
        $this->hasColumn('post_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('category_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Category', array(
             'local' => 'category_id',
             'foreign' => 'id'));

        $this->hasOne('Post', array(
             'local' => 'post_id',
             'foreign' => 'id'));
    }
}